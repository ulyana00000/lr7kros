import { ComponentFixture, TestBed } from '@angular/core/testing';
import { InstrumentEditComponent } from './instrument-edit.component';
import { ReactiveFormsModule } from '@angular/forms';
import { IInstrument } from '../../models/IInstrument';
import { By } from '@angular/platform-browser';

describe('InstrumentEditComponent', () => {
  let component: InstrumentEditComponent;
  let fixture: ComponentFixture<InstrumentEditComponent>;

  const mockInstruments: IInstrument[] = [
    {
      getName: () => 'Fender',
      getType: () => 'guitar',
      getPrice: () => 10000,
      guitarType: 'electric',
      strings: 6,
      rentPricePerDay: 200
    } as any,
    {
      getName: () => 'Yamaha',
      getType: () => 'piano',
      getPrice: () => 20000,
      keys: 88,
      mechanism: '–º–µ—Ö–∞–Ω—ñ–∫–∞',
      rentPricePerDay: 300
    } as any,
    {
      getName: () => 'Tama',
      getType: () => 'drums',
      getPrice: () => 18000,
      pieces: 5,
      hasPedal: true,
      rentPricePerDay: 400
    } as any
  ];

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [InstrumentEditComponent, ReactiveFormsModule],
    }).compileComponents();

    fixture = TestBed.createComponent(InstrumentEditComponent);
    component = fixture.componentInstance;
    component.instruments = mockInstruments;
    fixture.detectChanges();
  });

  it('–º–∞—î —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ñ–æ—Ä–º—É –¥–ª—è –≥—ñ—Ç–∞—Ä–∏', () => {
    component.selectInstrument(0);
    expect(component.form.contains('guitarType')).toBeTrue();
    expect(component.form.contains('strings')).toBeTrue();
  });

  it('–º–∞—î —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ñ–æ—Ä–º—É –¥–ª—è –ø—ñ–∞–Ω—ñ–Ω–æ', () => {
    component.selectInstrument(1);
    expect(component.form.contains('keys')).toBeTrue();
    expect(component.form.contains('mechanism')).toBeTrue();
  });

  it('–º–∞—î —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ñ–æ—Ä–º—É –¥–ª—è –±–∞—Ä–∞–±–∞–Ω—ñ–≤', () => {
    component.selectInstrument(2);
    expect(component.form.contains('pieces')).toBeTrue();
    expect(component.form.contains('hasPedal')).toBeTrue();
  });

  it('–º–∞—î –µ–º—ñ—Ç–∏—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ', () => {
    spyOn(component.updateInstrument, 'emit');

    component.selectInstrument(0);
    component.form.patchValue({ name: 'New name' });

    component.save();

    expect(component.updateInstrument.emit).toHaveBeenCalledWith(
      jasmine.objectContaining({
        index: 0,
        data: jasmine.objectContaining({ name: 'New name' })
      })
    );
  });

  it('–Ω–µ –¥–æ–∑–≤–æ–ª—è—î –∑–±–µ—Ä–µ–≥—Ç–∏ —Ñ–æ—Ä–º—É –±–µ–∑ –Ω–∞–∑–≤–∏', () => {
    component.selectInstrument(0);
    component.form.get('name')?.setValue('');
    expect(component.form.valid).toBeFalse();
  });

  it('–≤–∏–¥–∞–ª—è—î —Å—Ç–∞—Ä—ñ –¥–∏–Ω–∞–º—ñ—á–Ω—ñ –ø–æ–ª—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ç–∏–ø—É', () => {
    component.selectInstrument(0); // guitar
    expect(component.form.contains('guitarType')).toBeTrue();

    // –Ü–º—ñ—Ç–∞—Ü—ñ—è –≤–∏–±–æ—Ä—É –Ω–æ–≤–æ–≥–æ —Ç–∏–ø—É ‚Äî piano
    component.form.get('type')?.setValue('piano');

    expect(component.form.contains('guitarType')).toBeFalse(); // üî• –ú–∞—î –≤–∏–¥–∞–ª–∏—Ç–∏—Å—å
    expect(component.form.contains('keys')).toBeTrue();        // üî• –ú–∞—î –¥–æ–¥–∞—Ç–∏—Å—å
  });

  it('–Ω–µ –¥–æ–¥–∞—î –∑–∞–π–≤—ñ –ø–æ–ª—è –ø—Ä–∏ –Ω–µ–≤—ñ–¥–æ–º–æ–º—É —Ç–∏–ø—ñ', () => {
    component.selectInstrument(0);
    component.updateDynamicFields('violin'); // —Ç–∏–ø, —è–∫–æ–≥–æ –Ω–µ–º–∞

    expect(component.form.contains('guitarType')).toBeFalse();
    expect(component.form.contains('keys')).toBeFalse();
    expect(component.form.contains('pieces')).toBeFalse();
  });






});
